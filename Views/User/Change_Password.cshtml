@{
    Layout = null;
}

<script>
    function onCpSubmit(ev) {
        if ($('#cp-form').dxForm('validate').isValid) {
            showConfirm("Change Password Confirmation", "Are you sure, want to change your current password to new one?");
        }
    }
    function onCpShown(ev) {
        $('#cp-form').dxForm('resetValues');
    }

    function onShowPassword(ev) {
        var tag = $(ev.element).dxButton('option').tag;
        if ($('#' + tag).dxTextBox('option').mode == "text") {
            $('#' + tag).dxTextBox('option').mode = "password";
            $('#' + tag).dxTextBox('option').buttons[0].options.icon = "/images/eye-blink.svg";
            //$(ev.element).dxButton('option').icon = "/images/eye-blink.svg";
        } else {
            $('#' + tag).dxTextBox('option').buttons[0].options.icon = "/images/eye.svg";
            $('#' + tag).dxTextBox('option').mode = "text";
        }
        $('#' + tag).dxTextBox('repaint');
    }
    function onPwChanged(ev) {
        var val = $('#new').dxTextBox('option').text;
        //var val = ev.value;
        if (val.length >= 8) {
            $('#cp-length > img')[0].style.display = 'none';
            $('#cp-length > img')[1].style.display = 'inline-block';
        }
        else {
            $('#cp-length > img')[1].style.display = 'none';
            $('#cp-length > img')[0].style.display = 'inline-block';
        }
        if (val.match(/\d/) && val.match(/\W/)) {
            $('#cp-nonletter > img')[0].style.display = 'none';
            $('#cp-nonletter > img')[1].style.display = 'inline-block';
        }
        else {
            $('#cp-nonletter > img')[1].style.display = 'none';
            $('#cp-nonletter > img')[0].style.display = 'inline-block';
        }
        if (val.match(/[A-Z]/) && val.match(/[a-z]/)) {
            $('#cp-letter > img')[0].style.display = 'none';
            $('#cp-letter > img')[1].style.display = 'inline-block';
        }
        else {
            $('#cp-letter > img')[1].style.display = 'none';
            $('#cp-letter > img')[0].style.display = 'inline-block';
        }
        
    }

    $(document).ready(function () {
        $(document).on('click', '#btn-yes', function () {
            $.modal.close();
            SendDxForm("cp-form", "@ViewData["BaseUrl"]/api/users/change_pw", false,
                function (data, status, xhr) {
                    if (data.status == "success") {
                        $('#cp-pop').dxPopup('hide');
                        showAlert("Change password succeed", "Your password have been changed!");
                    } else if (data.status == "error") showAlert("Error", data.desc);
                }, function (xhr, status, err) {
                    ApiFetchError();
                }
            );
        });
        $(document).on('click', '#btn-no', function () {
            $.modal.close();
        });
    });

</script>

@using (Html.DevExtreme().NamedTemplate("PasswordInfo")) {
<div class="cp-info">
    <p id="cp-length">
        8 Character Length  <img src="~/images/x.svg" /><img src="~/images/check.svg" style="display: none" />
    </p>
    <p id="cp-letter">
        UPPERCASE & lowercase letter <img src="~/images/x.svg" /><img src="~/images/check.svg" style="display: none" />
    </p>
    <p id="cp-nonletter">
        Number & Symbol character <img src="~/images/x.svg" /><img src="~/images/check.svg" style="display: none" />
    </p>
</div>
}

@(Html.DevExtreme().Popup()
    .ID("cp-pop").Title("Change Password").Visible(false).CloseOnOutsideClick(false)
    .Content(@<div>
    @(Html.DevExtreme().Form()
        .ID("cp-form").LabelLocation(FormLabelLocation.Top)
        .ShowColonAfterLabel(true).ColCount(2)
    .Items(item => {
        item.AddSimple()
            .ValidationRules(vr => {
                vr.AddRequired();
                vr.AddStringLength().Min(3).Max(200);
            })
            .Editor(editor => editor.TextBox()
                .ID("old").Placeholder("<Type last used password>")
                .Mode(TextBoxMode.Password)
                .Buttons(button => {
                    button.Add().Widget(widget => widget.Button()
                        .Icon(Url.Content("~/images/eye-blink.svg")).OnClick("onShowPassword")
                        .Option("tag", "old")
                    ).Name("old").Location(TextEditorButtonLocation.After);
                })
            ).Label(label => label.Text("Current Password")).DataField("old");
        item.AddEmpty();
        item.AddSimple()
            .ValidationRules(vr => {
                vr.AddRequired();
                vr.AddStringLength().Min(3).Max(200);
            })
            .Editor(editor => editor.TextBox()
                .ID("new").Placeholder("<Type new password>")
                .Mode(TextBoxMode.Password)
                .Buttons(button => {
                    button.Add().Widget(widget => widget.Button()
                        .Icon(Url.Content("~/images/eye-blink.svg")).OnClick("onShowPassword")
                        .Option("tag", "new")
                    ).Name("new").Location(TextEditorButtonLocation.After);
                })
                .OnKeyUp("onPwChanged")
            ).Label(label => label.Text("New Password")).DataField("new");
        item.AddSimple()
            .ValidationRules(vr => {
                vr.AddRequired();
                vr.AddCompare().ComparisonType(ComparisonOperator.Equal)
                    .ComparisonTarget("function() {return $('#new').dxTextBox('option').value; }");
                vr.AddStringLength().Min(3).Max(200);
            })
            .Editor(editor => editor.TextBox()
                .ID("new-confirm").Placeholder("<Re-enter new password>")
                .Mode(TextBoxMode.Password)
                .Buttons(button => {
                    button.Add().Widget(widget => widget.Button()
                        .Icon(Url.Content("~/images/eye-blink.svg")).OnClick("onShowPassword")
                        .Option("tag", "new-confirm")
                    ).Name("new-confirm").Location(TextEditorButtonLocation.After);
                })
            ).Label(label => label.Text("Confirm Password")).DataField("new-confirm");
        item.AddSimple().Template(new TemplateName("PasswordInfo")).HelpText("optional");
        item.AddButton()
            .ButtonOptions(option => option.Text("Confirm")
                .ID("cp-submit").UseSubmitBehavior(true).OnClick("onCpSubmit"))
            .VerticalAlignment(VerticalAlignment.Bottom);
    }
    ).OnEditorEnterKey("onCpSubmit")
    )
</div>)
.Width("500px").Height("350px").OnShown("onCpShown")
)

<style>
    .cp-info p img {
        width: 12px;
    }
</style>